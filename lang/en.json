{
    "DigiTracking": {
        "UseDataLayerTitle": "Send data as a custom event to Datalayer",
        "UseDataLayerDescription": "You can choose to send the events via the DataLayer with custom Events instead of directly pushing the events to Matomo with _paq.push(['trackEvent',....) The reason for doing so would give you more control in the TagManager. You can set up more rules etc. If you enable this you will need to manually set up 3 datalayer variables, a trigger and a Matomo Event before anything will be sent to Matomo",
        "UseDataLayerCustomEvenTitle": "Send data as a custom event to Datalayer!!",
        "UseDataLayerCustomEvenDescription": "We will send event to the datalayer with the name you define here. For example mtm.push({  'event': 'customEvent'}); ",
        "UseDataLayerCustomEventCategoryTitle": "The name of the datalayer variable name to use for eventCategory",
        "UseDataLayerCustomEventCategoryDescription": "This is the name you will use for the datalayer variable you need to create. For example mtm.push({  'event: 'customEvent', 'eventCategory': 'value', 'eventAction': 'value','eventName': 'value','eventValue': 'value'  }); ",
        "UseDataLayerCustomEventActionTitle": "The name of the datalayer variable name to use for eventAction",
        "UseDataLayerCustomEventActionDescription": "This is the name you will use for the datalayer variable you need to create. For example mtm.push({  'event: 'customEvent', 'eventCategory': 'value', 'eventAction': 'value','eventName': 'value','eventValue': 'value'  }); ",
        "UseDataLayerCustomEventNameTitle": "The name of the datalayer variable name to use for eventName",
        "UseDataLayerCustomEventNameDescription": "This is the name you will use for the datalayer variable you need to create. For example mtm.push({  'event: 'customEvent', 'eventCategory': 'value', 'eventAction': 'value','eventName': 'value','eventValue': 'value'  }); ",
        "UseDataLayerCustomEventValueTitle": "The name of the datalayer variable name to use for eventValue",
        "UseDataLayerCustomEventValueDescription": "This is the name you will use for the datalayer variable you need to create. For example mtm.push({  'event: 'customEvent', 'eventCategory': 'value', 'eventAction': 'value','eventName': 'value', 'eventValue': 'value' }); ",
        "EnableOutLinkEventsTitle": "Enable automatic event tracking of outlink clicks",
        "EnableOutLinkEventsDescription": "This will automatically send events to Matomo for all clicks on external links. The reason for enebling this is that the built in tracker will not store the page URL from where the outlink was clicked. Events are named like this: EventCat: outlink EventAction: <click text> - <click destination url>  EventName: <page path>",
        "CustomOutLinkEventCategoryTitle": "The eventCategory name to use for outlink events",
        "CustomOutLinkEventCategoryDescription": "The event category name to use. Note: action and name are set automatically in this tag",
        "CustomOutLinkEventValueTitle": "The eventValue to use for outlink events",
        "CustomOutLinkEventValueDescription": "The event numeric value to use",
        "CustomOutLinkInternalDomainsTitle": "A comma separated list of domains that you do not want to treat as outlinks.",
        "CustomOutLinkInternalDomainsDescription": "A comma separated list of domais including protocol that will not report as outlinks. Example: https://example.com, https://example2.com. We do not support https://*.examples.com, you will need to add all domains manually",
        "EnableDownloadEventsTitle": "Enable automatic event tracking of downloads",
        "EnableDownloadEventsDescription": "This will automatically send events to Matomo for all clicks on files (downloads). The reason for enebling this is that the built in tracker will not store the page URL from where the outlink was clicked. Events are named like this: EventCat: downloadClick EventAction: <click text> - <click destination url>  EventName: <page path>",
        "CustomDownloadkEventCategoryTitle": "The eventCategory name to use for download events",
        "CustomDownloadkEventCategoryDescription": "The event category name to use. Note: action and name are set automatically in this tag",
        "CustomDownloadkEventValueTitle": "The eventValue name to use for download events",
        "CustomDownloadkEventValueDescription": "A numeric value to use for eventValue",
        "EnableDownloadExtensionsTitle": "Download Extension configuration",
        "EnableDownloadExtensionseDescription": "Comma separated list of file extensions which will be considered as a downloads",
        "EnablePhoneClicksTitle": "Enable automatic event tracking of clicks on phone numbers",
        "EnablePhoneClicksDescription": "This will automatically send events to Matomo for all clicks on phone numbers <a href='tel:**' .  Events are named like this: EventCat: phoneClick EventAction: <click text> - <click destination url>,  EventName: <page path>",
        "CustomPhoneEventCategoryTitle": "The eventCategory name to use for these events",
        "CustomPhoneEventCategoryDescription": "The event category name to use for these events. Note: EventAction and EventName are set automatically in this tag'",
        "CustomPhoneEventValueTitle": "The eventValue name to use for phone number click events",
        "CustomPhoneEventValueDescription": "A numeric value to use for eventValue",
        "EnableMailClicksTitle": "Enable automatic event tracking of clicks on mail adresses",
        "EnableMailClicksDescription": "This will automatically send events to Matomo for all clicks on mail links. <a href='mailto:**' Events are named like this: EventCat: mailClick EventAction:<click text> - <click destination url>,  EventName: <page path>",
        "CustomMailEventCategoryTitle": "The eventCategory name to use for these events",
        "CustomMailEventCategoryDescription": "The event category name to use. Note: action and name are set automatically in this tag",
        "CustomMailEventValueTitle": "The eventValue name to use for mail click events",
        "CustomMailValueDescription": "A numeric value to use for eventValue",
        "EnableAccordionClicksTitle": "Enable automatic event tracking of clicks on accordions",
        "EnableAccordionClicksDescription": "This will automatically send events to Matomo when someone open an accordions.  Events are named like this: EventCat: accordionClick EventAction: <click text>,  EventName: <page path>",
        "CustomAccordionClickSelectorTitle": "The querySelector to use or accordion clicks",
        "CustomAccordionClickSelectorTitleDescription": "This is how we detect the clicks. This should be a querySelector like .accordion-item__top__toggle__icon-plus",
        "customAccordionOpenSelectorTitle": "The querySelector to use to check if an accordion is already open",
        "customAccordionOpenSelectorDescription": "Since we only want to send the event when the accordion is opened. By default we use aria-expanded on the click object (but if this does not exist) you can manually enter something else like a classs or you can use ",
        "CustomAccordionEventCategoryTitle": "The eventCategory name to use for accordions clisk events",
        "CustomAccordionEventCategoryDescription": "The event category name to use. Note: action and name are set automatically in this tag",
        "CustomAccordionEventValueTitle": "The eventValue name to use for accordion click events",
        "CustomAccordionEventValueDescription": "A numeric value to use for eventValue",
        "ClickObjectFunctionTitle":"Lookup function to use",
        "ClickObjectFunctionDescription":"clickParents will look upwards the DOM tree (parents) using closest() and clickChildren will look down below the clickElement using querySelector()",
        "ClickObjectFunctionInlineHelp":" <a href='https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelector'>Learn about the querySelector function at the Mozilla docs</a><br><a href='https://developer.mozilla.org/en-US/docs/Web/API/Element/closest'>Learn about the closest function at the Mozilla docs</a>",
        "ClickObjectSelectorTitle":"Enter the queryselector to use the find the element",
        "ClickObjectSelectorDescription":"Enter a query selector to use to find the element relative to the click element (button below for example).",
        "ClickObjectSelectorInlineHelp":"This could be a .className #id or [myMetaTag=value] etc<br>",
        "ClickObjectSecondQueryTitle":"Enable subquery for clickParents",
        "ClickObjectSecondQueryDescription":"This will give you the ability to do a querySelector on the parent to find siblings or other nested elements in the page.",
        "ClickObjectSecondQuerySelectorTitle":"Enter query selector for additional logic",
        "ClickObjectSecondQuerySelectorDescription":"Enter a query selector to use to find the sub element.",
        "ClickObjectSecondQuerySelectorInlineHelp":"This could be a .className #id or [myMetaTag=value]",
        "ClickObjectLookupPropertyTitle":"Select the property you want to access",
        "ClickObjectLookupPropertyDescription":"The property you want to get data from after the querys have been done",
        "ClickObjectLookupPropertyInlineHelp":"If you select custom you can enter it manually",
        "clickObjectCustomPropertyTitle":"The attribute you want to access. for example innerText or aria-label.",
        "clickObjectCustomPropertyDescription":"We will use the js function getAttribute('<meta-data>') to read the defined value from the element",
        "clickObjectCustomPropertyInlineHelp":"",
        "ParentClickTextVariableName": "ParentClickText",
        "ParentClickTextVariableDescription": "This is the description for ParentClickText",
        "ParentClickTextVariableHelp": "",
        "ClickParentsVariableName": "ClickParents",
        "ClickParentsVariableDescription": "This is the description for ClickParents",
        "ClickParentsVariableHelp": ""
    }
}